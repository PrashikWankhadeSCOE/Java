// Program 1

// 3 files are creater after compilation

// Client.class  'Outer$Inner.class'   Outer.class

class Outer {
        class Inner {
                void fun1(){
                        System.out.println(" In Inner = fun");
                }
        }
        void fun2(){
                System.out.println("In outer = fun");
        }
}
class Client{
        public static void main(String [] args ){
                Outer obj = new Outer();
                obj.fun2();

                Outer.Inner obj1 = obj.new Inner();
                obj1.fun1();

                Outer.Inner obj2 = new Outer().new Inner();
                obj2.fun1();
        }
}

Output 
 In outer = fun
 In Inner = fun
 In Inner = fun


// Program 2 
// anything in the outer class can be accessed from the inner class
// like method and variables

class Outer{
        int x = 100;
        int y = 200;
        class Inner {
                void fun(){
                        System.out.println("fun inner");
                        System.out.println(x);
                        System.out.println(y);
                        gun();
                }
        }
        void gun(){
                System.out.println("gun outer");
        }
}

//Program 3 
//static can be only written in class not in methods because static is 1st that goes on stack frame so we have to declare all static first in the class

class Outer{
        int x = 10;
        static int y = 20;

        void m1(){
                int a = 100;
                static int b = 200;                        // error illegal start of expression
        }
        public static void main(String [] args){
                int z = 40;
                static int l = 50;                        // error as above
        }
}
