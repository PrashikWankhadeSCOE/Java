=================================== Program 1 =======================================

Write a program to print count of digits in elements of array 
Input: Enter array elementa: 02 255 2 1554 
Output: 2 3 1 4

===================================  Solution  =======================================
import java.io.*;

class ArrayDemo{
        public static void main(String[] args)throws IOException{
                BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

                System.out.print("Enter the size of array : ");
                int size = Integer.parseInt(br.readLine());
                int arr[]=new int[size];

                System.out.print("Enter array Elements : ");
                for(int i = 0;i<arr.length;i++){
                        arr[i]=Integer.parseInt(br.readLine());

                }

                System.out.println("Length of the element in array : ");
                for(int i =0;i<arr.length;i++){
                        int temp = arr[i];
                        int sum = 0;
                        while(temp>0){
                                sum++;
                                temp=temp/10;
                        }
                        System.out.print(sum+" ");
                }
        }
}

=================================== Program 2 =======================================
WAP to reverse each element in an array Take size and elements from the user

Input: 10 25 252 36 564

Output: 01 52 252 63 465

===================================  Solution  =======================================

import java.io.*;

class ArrayDemo{
        public static void main(String[] args)throws IOException{
                BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

                System.out.print("Enter the size of array : ");
                int size = Integer.parseInt(br.readLine());
                int arr[]=new int[size];

                System.out.println("Enter array Elements : ");
                for(int i = 0;i<arr.length;i++){
                        arr[i]=Integer.parseInt(br.readLine());

                }

                for(int i =0;i<arr.length;i++){
                        int temp = arr[i];

                        int rem=0;
                        int rev=0;
                        while(temp>0){
                                rem = temp%10;
                                rev = rev*10+rem;
                                temp=temp/10;
                        }
                        System.out.print(rev+" ");
                }
        }
}
=================================== Program 3 =======================================

WAP to find a composite number from an array and return its index. Take size and elements from the user 
Input: 1 2 3 5 6 7

Output: composite 6 found at index: 4

===================================  Solution  =======================================

import java.io.*;

class ArrayDemo{
        public static void main(String[] args)throws IOException{
                BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

                System.out.print("Enter the size of array : ");
                int size = Integer.parseInt(br.readLine());
                int arr[]=new int[size];

                System.out.println("Enter array Elements : ");
                for(int i = 0;i<arr.length;i++){
                        arr[i]=Integer.parseInt(br.readLine());

                }

                for(int i =0;i<arr.length;i++){
                        int temp = arr[i];
                        int sum = 0;
                        for(int j = 1 ; j<arr[i];j++){
                                if(arr[i]%j==0){
                                        sum++;
                                }
                        }
                        if (sum>1){
                                System.out.print("Composite number : "+ arr[i]+"found at : "+i);
                        }
                }
        }
}
=================================== Program 4 =======================================
WAP to find a prime number from an array and return its index. Take size and elements from the user

Input: 10 25 36 566 34 53 50 100

Output: prime no 53 found at index: 5

===================================  Solution  =======================================

import java.io.*;

class ArrayDemo{
        public static void main(String[] args)throws IOException{
                BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

                System.out.print("Enter the size of array : ");
                int size = Integer.parseInt(br.readLine());
                int arr[]=new int[size];

                System.out.println("Enter array Elements : ");
                for(int i = 0;i<arr.length;i++){
                        arr[i]=Integer.parseInt(br.readLine());

                }

                for(int i =0;i<arr.length;i++){
                        int temp = arr[i];
                        int sum = 0;
                        for(int j = 1 ; j<arr[i];j++){
                                if(arr[i]%j==0){
                                        sum++;
                                }
                        }
                        if (sum<=1){
                                System.out.print("Prime no : "+arr[i]+"found at index : " +i);
                        }
                }
        }
}
=================================== Program 5 =======================================

WAP to find a Perfect number from an array and return its index.
Take size and elements from the user
Input: 10 25 252 496 564
Output: Perfect no 496 found at index: 3

===================================  Solution  =======================================

import java.io.*;

class ArrayDemo{
        public static void main(String[] args)throws IOException{
                BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

                System.out.print("Enter the size of array : ");
                int size = Integer.parseInt(br.readLine());
                int arr[]=new int[size];

                System.out.println("Enter array Elements : ");
                for(int i = 0;i<arr.length;i++){
                        arr[i]=Integer.parseInt(br.readLine());

                }

                for(int i =0;i<arr.length;i++){
                        int temp = arr[i];
                        int total = 0;
                        for(int j = 1; j<arr[i];j++){
                                if(temp%j==0){
                                        total = total+j;
                                }
                        }

                        if (total == arr[i]){
                                System.out.println("Perfect number : "+arr[i]+"found at index : " +i);
                        }
                }
        }
}

=================================== Program 6 =======================================
WAP to find a palindrome number from an array and return its index. Take size and elements from the user
Input: 10 25 252 36 564
Output: Palindrome no 252 found at index: 2

===================================  Solution  =======================================

import java.io.*;

class ArrayDemo{
        public static void main(String[] args)throws IOException{
                BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

                System.out.print("Enter the size of array : ");
                int size = Integer.parseInt(br.readLine());
                int arr[]=new int[size];

                System.out.println("Enter array Elements : ");
                for(int i = 0;i<arr.length;i++){
                        arr[i]=Integer.parseInt(br.readLine());

                }

                for(int i =0;i<arr.length;i++){
                        int temp = arr[i];
                        int rev = 0;
                        int rem = 0;
                        while(temp>0){
                                rem = temp%10;
                                rev = rev*10 + rem;
                                temp = temp/10;
                        }

                        if (rev == arr[i]){
                                System.out.println("Palindrome number : "+arr[i]+"found at index : " +i);
                        }
                }
        }
}

=================================== Program 7 =======================================
WAP to find a Strong number from an array and return its index. Take size and elements from the user.
Input: 10 25 252 36 564 145
Output: Strong no 145 found at index: 5

===================================  Solution  =======================================

import java.io.*;

class ArrayDemo{
        public static void main(String[] args)throws IOException{
                BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

                System.out.print("Enter the size of array : ");
                int size = Integer.parseInt(br.readLine());
                int arr[]=new int[size];

                System.out.println("Enter array Elements : ");
                for(int i = 0;i<arr.length;i++){
                        arr[i]=Integer.parseInt(br.readLine());

                }

                for(int i =0;i<arr.length;i++){
                        int temp = arr[i];
                        int rem = 0;
                        int total = 0;

                        while (temp>0){
                                int fact = 1;
                                rem = temp%10;
                                for(int j = 1;j<=rem;j++){
                                        fact = fact*j;
                                }
                                total = total + fact;
                                temp = temp/10;
                        }

                        if (total == arr[i]){
                                System.out.println("Perfect number : "+arr[i]+"found at index : " +i);
                        }
                }
        }
}

=================================== Program 8 =======================================

WAP to find an Armstong number from an array and return its index. Take size and elements from the user
Input: 10 25 252 36 163 55 89
Output: Armstrong no 153 found at index: 4
===================================  Solution  =======================================

import java.io.*;

class ArrayDemo{
        public static void main(String[] args)throws IOException{
                BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

                System.out.print("Enter the size of array : ");
                int size = Integer.parseInt(br.readLine());
                int arr[]=new int[size];

                System.out.println("Enter array Elements : ");
                for(int i = 0;i<arr.length;i++){
                        arr[i]=Integer.parseInt(br.readLine());

                }

                for(int i =0;i<arr.length;i++){
                        int temp = arr[i];
                        int rem = 0;
                        int total = 0;

                        while (temp>0){
                                int remCube = 1;
                                rem = temp%10;
                                remCube = rem*rem*rem; total = total + remCube;
                                temp = temp/10;
                        }

                        if (total == arr[i]){
                                System.out.println("Perfect number : "+arr[i]+"found at index : " +i);
                        }
                }
        }
}

=================================== Program 9 =======================================
Write a program to print the second max element in the array 
Input: Enter array elements: 2 255 2 1554 15 65
Output: 255

===================================  Solution  =======================================
import java.io.*;

class ArrayDemo{
        public static void main(String[] args)throws IOException{
                BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

                System.out.print("Enter the size of array : ");
                int size = Integer.parseInt(br.readLine());
                int arr[]=new int[size];

                System.out.println("Enter array Elements : ");
                for(int i = 0;i<arr.length;i++){
                        arr[i]=Integer.parseInt(br.readLine());
                }
                int max = arr[0];
                int max2 = arr[0];
                for(int i = 0; i<arr.length;i++){
                        if(arr[i]>max){
                                max2 = max;
                                max = arr[i];
                        }              
                System.out.println(max2);
        }
}

=================================== Program 10 =======================================
Write a program to print the second min element in the array 
Input: Enter array elements: 255 2 1554 15 65 95 89
Output: 15
===================================  Solution  =======================================

